# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - 'logs/**'
      - '.github/**'
      - '.pylintrc'
      - '.githooks/**'
      - 'database/**'
      - 'Docs/**'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - 'logs/**'
      - '.github/**'
      - '.pylintrc'
      - '.githooks/**'
      - 'database/**'
      - 'Docs/**'


jobs:
  version_validation:
    name: Validate the version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Get the version from the config file
        id: version
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: config.yaml
          version: version
      - name: Validate that version doesn't exists
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: ${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ steps.checkTag.outputs.exists == 'true' && github.event_name == 'pull_request' }}
        name: Post comment on PR
        uses: thollander/actions-comment-pull-request@1.0.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: '${{ steps.version.outputs.version }} already exists, please update the version in the config file.'
      - if: ${{ steps.checkTag.outputs.exists == 'true' }}
        name: Fails because the tag already exists.
        run: exit 1
  execute_tests:
    name: Execute tests and linter
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip3 install --no-cache-dir -r dev-requirements.txt
    - name: Execute linter
      run: |
        pylint --fail-under 8.0 src
#    - name: Execute tests
#      run: |
#        pytest
  create_pre_release:
    name: Create Github pre-release
    if: ${{ github.event_name == 'push' }}
    needs:
      - version_validation
      - execute_tests
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create pre-release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ needs.version_validation.outputs.version }}
          title: v${{ needs.version_validation.outputs.version }}